#!/system/bin/sh
# ======================================================================
# Module: Energized Protection 
# License: CC BY-NC-SA 4.0; https://nayemador.com/energized/license
# Copyright (C) 2018 Energized Protectionà¥¤ All Rights Reserved.
# ====================================================================== 
# Script Begins -
# ========================================
# Colors
# ----------------------------------------
BL='\e[01;90m' > /dev/null 2>&1; # Black
R='\e[01;91m' > /dev/null 2>&1; # Red
G='\e[01;92m' > /dev/null 2>&1; # Green
Y='\e[01;93m' > /dev/null 2>&1; # Yellow
B='\e[01;94m' > /dev/null 2>&1; # Blue
P='\e[01;95m' > /dev/null 2>&1; # Purple
C='\e[01;96m' > /dev/null 2>&1; # Cyan
W='\e[01;97m' > /dev/null 2>&1; # White
LG='\e[01;37m' > /dev/null 2>&1; # Light Gray
N='\e[0m' > /dev/null 2>&1; # Null
# ----------------------------------------

# Define Energized Protection Directory
# ----------------------------------------
DIRECTORY=/sdcard/EnergizedProtection

rm -f $DIRECTORY/filter
rm -f $DIRECTORY/deltaFilter
rm -f $DIRECTORY/deltaReadme

# Divider
# ----------------------------------------
divider="-------------------------------------------------"

# Mount System
# ----------------------------------------
mount -o remount,rw /system
fi

# Create Energized Protection Directory
# ----------------------------------------
if [ ! -d $DIRECTORY ]; then
    mkdir -p $DIRECTORY;
fi

# Versioning & Date
# ----------------------------------------
version=$Y'edamame β'$N > /dev/null 2>&1
released=$G'Sep 6, 2018'$N > /dev/null 2>&1
saythanks='https://saythanks.io/to/AdroitAdorKhan' > /dev/null 2>&1
date=$(date "+%d.%m.%Y %H:%M:%S")

# Start Echos
# ----------------------------------------
clear
echo ''
echo -e $Y"      _____  _________  _____________  _______  "$N
echo -e $Y"     / __/ |/ / __/ _ \/ ___/  _/_  / / __/ _ \ "$N
echo -e $Y"    / _//    / _// , _/ (_ // /  / /_/ _// // / "$N
echo -e $Y"   /___/_/|_/___/_/|_|\___/___/ /___/___/____/  "$N
echo ''
echo -e $Y'      P   R   O   T   E   C   T   I   O   N'$N 
sleep 0.1
echo "$divider" 
echo "     Version: $version | Updated: $released"
sleep 0.1
echo "$divider"
sleep 0.1
echo ""
sleep 0.1
echo -e $Y'             nayemador.com/energized'$N
echo ""
sleep 0.1
echo "             ©Team Boltz | Energized"
echo ''
sleep 0.5
echo -n -e $Y'                        •'$N; sleep 0.2; 
echo -n -e $Y'•'$N; sleep 0.3;
echo -n -e $Y'•'$N; sleep 0.2;
sleep 2
clear

# Disclaimer
# ----------------------------------------
echo -e "$divider"
echo -e $R'DISCLAIMER'$N
echo -e "$divider"
echo -e $R"THIS IS SIMPLY A MODULE TO CHANGE YOUR SYSTEM's"$N
echo -e $R"HOSTS FILE. IF YOU DON'T KNOW WHAT YOU ARE DOING,"$N
echo -e $R"THEN PLEASE DON'T PROCEED. I WON'T BE RESPONSIBLE"$N
echo -e $R"FOR THE MESS YOU CREATE."$N
echo ''
echo -e $Y"ENERGIZED BASIC/PORN/ULTIMATE/UNIFIED PACKS ARE"$N
echo -e $Y"BIGGER IN SIZE. USE THEM, IF YOUR DEVICE CAN"$N
echo -e $Y"HANDLE THE LOAD."$N
echo -e "$divider"
sleep 6

# Check Systemless Support
# ----------------------------------------
clear
echo "[+] Inspecting System Hosts"; sleep 0.2; clear
echo "[+] Inspecting System Hosts."; sleep 0.2; clear
echo "[+] Inspecting System Hosts.."; sleep 0.2; clear
echo "[+] Inspecting System Hosts..."; sleep 0.5; clear
echo "[+] Inspecting System Hosts.."; sleep 0.2; clear
echo "[+] Inspecting System Hosts."; sleep 0.2; clear
echo "[+] Inspecting System Hosts"; sleep 0.2; clear

# Friendly Warning
# ----------------------------------------
	sleep 0.1 
	echo "$divider"
    echo ''
	echo "  \033[37;5;7m[+] Make sure no other ad-blocker is installed !!\033[0m"
	echo "  \033[37;5;7m[+] To avoid issues with Energized !! ^_^\033[0m"
	echo ''
	echo "$divider"
	sleep 2
fi

# Check Energized Directory
# ----------------------------------------
clear
echo "[+] Checking Energized Directory."; sleep 0.1; clear
echo "[+] Checking Energized Directory.."; sleep 0.2; clear
echo "[+] Checking Energized Directory..."; sleep 0.1; clear

# Create Cache Directory
# ----------------------------------------
if [ ! -d $DIRECTORY/cache ]; then
    mkdir -p $DIRECTORY/cache;
    echo -e "\n[+] Setting up working cache directory.\n";
fi
# Check Whitelist
# ----------------------------------------
if [ ! -f $DIRECTORY/blacklist ]; then
   clear
   echo -e "\n[+] Creating Blacklist.\n";
   touch $DIRECTORY/blacklist
   sleep 0.2
fi
# Check Blacklist
# ----------------------------------------
if [ ! -f $DIRECTORY/whitelist ]; then
   clear
   echo -e "[+] Creating Whitelist.";
   touch $DIRECTORY/whitelist
   sleep 0.2
fi
# Check Redirectlist
# ---------------------------------------- 
if [ ! -f $DIRECTORY/redirectlist ]; then
   clear
   echo -e "[+] Creating Redirectlist.";
   touch $DIRECTORY/redirectlist
   sleep 0.2
fi
# Check Temp
# ---------------------------------------- 
if [ ! -f $DIRECTORY/cache/energizedtemp ]; then
   clear
   echo -e "[+] Creating temporary cache...";
   touch $DIRECTORY/cache/energizedtemp
   sleep 0.2
fi
# Check Porn Temp
# ----------------------------------------
if [ ! -f $DIRECTORY/cache/energizedporntemp ]; then
   clear
   echo -e "[+] Creating Temp...";
   touch $DIRECTORY/cache/energizedporntemp
   sleep 0.2
fi
# Check Social Temp
# ----------------------------------------
if [ ! -f $DIRECTORY/cache/energizedsocialtemp ]; then
   clear
   echo -e "[+] Creating Temp...";
   touch $DIRECTORY/cache/energizedsocialtemp
   sleep 0.2
fi
# Features & Main Parts
# ----------------------------------------
while true
do
# Aliases, Grep, Wget Variables
# ----------------------------------------
alias wget="busybox wget"
alias grep="busybox grep"
HOST=/system/etc/hosts
TREADME=$DIRECTORY/cache/readme
DREADME=$DIRECTORY/cache/deltaReadme
FILTER=$DIRECTORY/cache/filter
DFILTER=$DIRECTORY/cache/deltaFilter
WHITELIST=$DIRECTORY/whitelist
BLACKLIST=$DIRECTORY/blacklist
REDIRECTLIST=$DIRECTORY/redirectlist
TEMP=$DIRECTORY/cache/energizedtemp
LTEMP=$DIRECTORY/cache/energizedlisttemp
PTEMP=$DIRECTORY/cache/energizedporntemp
STEMP=$DIRECTORY/cache/energizedsocialtemp
curip=$(grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\} ads.nayemador.com' $HOST | sed 's/ads.nayemador.com//')
COUNT=1
# TIP 1
# ----------------------------------------
clear
echo -e $G"$divider"$N
echo -e $G"TIPs"$N
echo -e $G"$divider"$N
echo ''
echo -e $W'~ NOT SURE WHAT YOU ARE DOING?\n- MAKE BACKUP & THEN RESTORE! ;)'$N
sleep 0.1
echo ''
echo -e $W'~ WANT TO GO TO MAGISK DIRECTLY FROM\nTHE SCRIPT? - TYPE MAGISK & HIT ENTER! :D'$N
sleep 1.5

# Check Delta Update
# ----------------------------------------
wget --no-check-certificate -q -O $DREADME https://raw.githubusercontent.com/AdroitAdorKhan/Energized/master/core/delta-patchset/blacklist
grep -q "#" $DREADME
if [ -f $DFILTER ]; then
	DCURRENT=$(grep "#" $DREADME)
	DUPDATED=$(sed '1q;d' $DFILTER)
	if [ "$DUPDATED" != "$DCURRENT" ]; then
		deltapatch=$G'[dp] Delta Patch'$N
	else
	    deltapatch=$W''$N
	fi
else
	touch $DFILTER
	
fi
busybox clear
	
# Check Root
# ----------------------------------------
id="$(id)"; id="${id#*=}"; id="${id%%\(*}"; id="${id%% *}"
if [ "$id" != "0" ] && [ "$id" != "root" ]; then
    root="\e[1;31m[×]\e[0m";
else
    root="\e[1;32m[✓]\e[0m";
fi;

# Other Variables
# ----------------------------------------
update="\e[1;36m`busybox date -r $HOST`\e[0m"
bboxname="\e[1;36m`busybox | head -1 | cut -f 2 -d ' '`\e[0m"
size="\e[1;35m`ls -lah $HOST | awk '{print $5}'`\e[0m"

# Check Adblocker
# ----------------------------------------
   [ -f $HOST ];
if busybox grep -q ads $HOST; then
	adblocker="\e[1;32m[✓]\e[0m"
else
	adblocker="\e[1;31m[×]\e[0m"
fi

# Check Energized
# ----------------------------------------
	[ -f $HOST ];
if busybox grep -q ads.nayemador.com $HOST; then
	eonoff="\e[1;32m[✓]\e[0m"
else
	eonoff="\e[1;31m[×]\e[0m"
fi

# Check Energized Pack
# ----------------------------------------
	[ -f $HOST ];
if busybox grep -q "E84S1C-P" $HOST; then
	echeck="\e[1;32mBasic Protection\e[0m"
	autopack="basic"
elif busybox grep -q "E5P4RK-P" $HOST; then
	echeck="\e[1;32mSpark Protection\e[0m"
	autopack="spark"
elif busybox grep -q "E8LU-P" $HOST; then
	echeck="\e[1;32mBlu Protection\e[0m"
	autopack="blu"
elif busybox grep -q "E8LUG0-P" $HOST; then
	echeck="\e[1;32mBlu Go Protection\e[0m"
	autopack="bluGo"
elif busybox grep -q "EP0R9-P" $HOST; then
	echeck="\e[1;32mPorn Protection\e[0m"
	autopack="porn"
elif busybox grep -q "EUL71M473-P" $HOST; then
	echeck="\e[1;32mUltimate Protection\e[0m"
	autopack="ultimate"
elif busybox grep -q "EU91F13D-P" $HOST; then
	echeck="\e[1;32mUnified Protection\e[0m"
	autopack="unified"
else
	echeck="\e[1;31mNo Pack Detected!\e[0m"
	autopack="null"
fi

# TIP 2
# ----------------------------------------
clear
echo -e $Y"$divider"$N
echo -e $Y"TIPs"$N
echo -e $Y"$divider"$N
echo ''
echo -e $W'~ TO DISABLE, JUST USE OPTION 'c' AND RELAX !!'$N
sleep 0.1
echo ''
echo -e $W'~ FEELING THANKFUL? ^_^\n - TYPE THX & YOU ARE MOST WELCOME! <3'$N
sleep 1.6

# Check Hosts Update
# ----------------------------------------
wget --no-check-certificate -q -O $TREADME https://raw.githubusercontent.com/EnergizedProtection/block/master/VERSION.md
grep -q "Version Code" $TREADME
if [ -f $FILTER ]; then
	CURRENT=$(grep "Version Code" $TREADME)
	LAST_UPDATED=$(sed '1q;d' $FILTER)
	if [ "$LAST_UPDATED" != "$CURRENT" ]; then
		eupdate=$G'[✓] UPDATE AVAILABLE!'$N
	else
		eupdate=$C'[×] NO NEW UPDATE!'$N
	fi
else
	touch $FILTER
	eupdate="[+] APPLY PACK FIRST!"
fi
busybox clear
	INPUT=$(eval "echo \$$COUNT")
	if [ ! "$INPUT" ]; then
		if [ "$1" ]; then
			rm -f $TREADME
			exit 0
		fi
# Starts Screen Echos
# ----------------------------------------
echo ''
echo "                                      v.$version"
echo -e $Y"      _____  _________  _____________  _______  "$N; sleep 0.1;
echo -e $Y"     / __/ |/ / __/ _ \/ ___/  _/_  / / __/ _ \ "$N; sleep 0.1;
echo -e $Y"    / _//    / _// , _/ (_ // /  / /_/ _// // / "$N; sleep 0.1;
echo -e $Y"   /___/_/|_/___/_/|_|\___/___/ /___/___/____/  "$N; sleep 0.1;
echo '' 
sleep 0.1
echo -e $Y'      P   R   O   T   E   C   T   I   O   N'$N 
echo ''
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $Y'[+] ROOT, BUSYBOX & DEVICE HOSTS INFO:'$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $W"$root ROOT             [+] BUSYBOX: $bboxname"$N
sleep 0.1
echo -e $W"$eonoff ENERGIZED        [+] PACK: $echeck"$N
sleep 0.1
echo -e $W"$adblocker ADBLOCKING       [+] SIZE: $size"$N
sleep 0.1
echo -e $W"[+] LAST UPDATED: $update"$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
# Packs
# ----------------------------------------
echo -e $Y"[+] ENERGIZED PACKs:     $eupdate"$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $W"[1] Spark         [3] Blu          [5] Ultimate"$N
sleep 0.1
echo -e $W"[2] Blu Go        [4] Basic        [6] Unified"$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $Y"[+] EXTENSIONS:          "$N$G"$deltapatch"$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $W"[p] Porn (Full)   [pl] Porn Lite   [s] Social"$N
sleep 0.1
# Options
# ----------------------------------------
echo -e $Y"$divider"$N
sleep 0.1
echo -e $Y'[+] OPTIONS:'$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $W'[c] Clear Hosts           [ip] Redirection IP'$N
sleep 0.1
echo -e $W'[w] Apply Whitelist       [iw] Instant Whitelist'$N
sleep 0.1
echo -e $W'[b] Apply Blacklist       [ib] Instant Blacklist'$N
sleep 0.1
echo -e $W'[re] Redirect Domains     [ir] Instant Redirect'$N
sleep 0.1
# Misc
# ----------------------------------------
echo -e $Y"$divider"$N
sleep 0.1
echo -e $Y'[+] MISC:'$N
sleep 0.1
echo -e $Y"$divider"$N
sleep 0.1
echo -e $W'[bp] Backup Hosts         [rs] Restore Hosts'$N
sleep 0.1
echo -e $W'[i] Web & Info            [in] Instructions'$N
sleep 0.1
echo -e $W'[u] Current-O-Update      [ck] Check Domain'$N
sleep 0.1
echo -e $R'[q] Quit.'$N
# Read Input
# ----------------------------------------
		echo -n "\033[33;1m[+] Your Input\033[0m - "
		read -r INPUT
		if [ "$INPUT" != "m" ]; then
			INPUT="$(echo "$INPUT" | sed 's/m//g')"
			clear
		fi
		DIR=""
	fi
	case "$INPUT" in
	    # Spark Protection
		1|spark|Spark|SPARK) DIR="master/spark/formats/hosts"
		clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y'[+] Applying Energized Spark Protection'$N
		;;
		# Blu Go Protection
		2|blugo|BluGo|bluGo|BLUGO) DIR="master/bluGo/formats/hosts"
		clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y'[+] Applying Energized Blu Go Protection'$N
		echo -e $Y"$divider"$N
		;;
		# Blu Protection
		3|blu|Blu|BLU) DIR="master/blu/formats/hosts"
		clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y'[+] Applying Energized Blu Protection'$N
		echo -e $Y"$divider"$N
		;;
		# Basic Protection
		4|basic|Basic|BASIC) clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y"Hold on a sec!"$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $W"Energized Basic is more than 12MB in size, and"$N
		sleep 0.1
		echo -e $W"may slow down your browsing experience (If your"$N
		sleep 0.1
		echo -e $W"device can't handle the load.)"$N
		echo ''
		sleep 0.1
		echo -n -e $W'[+] PROCEED?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  echo "[+] Applying Energized Basic..."
		  DIR="master/basic/formats/hosts"
		  clear
		  echo -e $Y"$divider"$N
		  sleep 0.1
		  echo -e $Y'[+] Applying Energized Basic Protection'$N
		  echo -e $Y"$divider"$N
		  sleep 0.3
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.1
		fi
		;;
		# Ultimate Protection
		5|ultimate|Ultimate|ULTIMATE) clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y"Hold on a sec!"$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $W"Energized Ultimate is more than 17MB in size, and"$N
		sleep 0.1
		echo -e $W"may slow down your browsing experience (If your"$N
		sleep 0.1
		echo -e $W"device can't handle the load.)"$N
		echo ''
		sleep 0.1
		echo -n -e $W'[+] PROCEED?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  echo "[+] Applying Energized Ultimate..."
		  DIR="master/ultimate/formats/hosts"
		  clear
		  echo -e $Y"$divider"$N
		  sleep 0.1
		  echo -e $Y'[+] Applying Energized Ultimate Protection'$N
		  echo -e $Y"$divider"$N
		  sleep 0.3
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.1
		fi
		;;
		# Unified Protection
		6|unified|Unified|UNIFIED) clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y"Hold on a sec!"$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $W"Energized Unified is more than 30MB in size, and"$N
		sleep 0.1
		echo -e $W"may slow down your browsing experience (If your"$N
		sleep 0.1
		echo -e $W"device can't handle the load.)"$N
		echo ''
		sleep 0.1
		echo -n -e $W'[+] PROCEED?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  echo "[+] Applying Energized Unified..."
		  DIR="master/unified/formats/hosts"
		  clear
		  echo -e $Y"$divider"$N
		  sleep 0.1
		  echo -e $Y'[+] Applying Energized Unified Protection'$N
		  echo -e $Y"$divider"$N
		  sleep 0.3
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.1
		fi
		;;
		# Porn Extension
		# ----------------------------------------
        p) clear
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $Y"Hold on a sec!"$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e $W"Energized Porn is more than 15MB in size, and"$N
		sleep 0.1
		echo -e $W"may slow down your browsing experience (If your"$N
		sleep 0.1
		echo -e $W"device can't handle the load.)"$N
		echo ''
		sleep 0.1
		echo -n -e $W'[+] PROCEED?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  clear
		  echo -e $Y"$divider"$N
		  echo -e $Y'[+] PORN HOSTS EXTENSION'$N
		  sleep 0.1
		  echo -e $Y"$divider"$N
		  sleep 0.1
		  echo "Add Porn Blocking Pack to current hosts."
		  echo -e $Y"$divider"$N
		  echo ""
		  wget --no-check-certificate -O $PTEMP https://raw.githubusercontent.com/EnergizedProtection/block/master/porn/formats/hosts
			echo "[+] Applying Porn Hosts to current hosts."
            mv $HOST $TEMP
            rm -f $HOST
			cat $TEMP $PTEMP > $HOST
			awk '!a[$0]++' $HOST > $PTEMP && mv -f $PTEMP $HOST
			rm -f $TEMP $PTEMP
			echo -e $G'[+] Done!'$N
			echo "[+] Returning..."
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.1
		fi
		;;
		# Porn Lite Extension
		# ----------------------------------------
        pl)  clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] PORN LITE HOSTS EXTENSION'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Add Porn Lite Blocking Pack to current hosts."
		echo -e $Y"$divider"$N
		echo ""
		wget --no-check-certificate -O $PTEMP https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/formats/ext-porn-hosts
			echo "[+] Applying Porn Hosts to current hosts."
            mv $HOST $TEMP
            rm -f $HOST
			cat $TEMP $PTEMP > $HOST
			awk '!a[$0]++' $HOST > $PTEMP && mv -f $PTEMP $HOST
			rm -f $TEMP $PTEMP
			echo -e $G'[+] Done!'$N
			echo "[+] Returning..."
		;;
		# Social Extension
		# ----------------------------------------
		s)  clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] SOCIAL HOSTS EXTENSION'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Add Social Blocking Pack to current hosts."
		echo -e $Y"$divider"$N
		echo ""
		wget --no-check-certificate -O $STEMP https://raw.githubusercontent.com/EnergizedProtection/block/master/extensions/formats/ext-social-hosts
			echo "[+] Applying Social Hosts to current hosts."
            mv $HOST $TEMP
			cat $TEMP $STEMP > $HOST
			awk '!a[$0]++' $HOST > $STEMP && mv -f $STEMP $HOST
			rm -f $TEMP $STEMP
			echo -e $G'[+] Done!'$N
			echo "[+] Returning..."
		;;
		# Current-O-Update
		# ----------------------------------------
		u) clear
		if [ "$autopack" == "null" ]; then
		  echo -e $R"[-] No Energized Pack Applied Yet!"$N
		  sleep 3
		else
		  echo -e $Y"$divider"$N
		  sleep 0.1
		  echo -e $Y"[+] Applying $echeck"$N
		  sleep 0.1
		  echo -e $Y"$divider"$N
		  echo ''
		  wget --no-check-certificate -O $HOST https://raw.githubusercontent.com/EnergizedProtection/block/master/$autopack/formats/hosts
		  echo "\n\033[32;5;7m[+] Done Applying!\033[0m"
		  sleep 1
		  echo -e $Y"$divider"$N
		  grep "Version Code" $TREADME > $FILTER
		  sleep 0.3
		# Whitelisting
		    echo -e $Y"$divider"$N
		    sleep 0.1
		    echo -e $Y'[+] WHITELISTING'$N
		    sleep 0.1
		    echo -e $Y"$divider"$N
		    sleep 0.1
		  # Begins
		    if [ ! -f $WHITELIST ]; then
				echo ""
				echo -e $R'[-] No Whitelist Detected!'$N
				sleep 0.5
				echo -e $W'[+] Copy your whilelist to'$N $Y'/sdcard/EnergizedProtection'$N
				sleep 2
		    else
				if [ -f "$HOST" ]; then
					echo -e $G'[+] Whitelist Found!'$N
					echo -e $W'[+] Applying Whitelist'$N
					sleep 0.3
					grep -Fvxf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 0.5
					grep -Fvf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 0.5
					grep -vxf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 0.1
					echo -e $G'[+] Done'$N
					sleep 1
				else
					echo ""
					echo -e $R'[-] No hosts file detected!'$N
					sleep 1
					echo -e $Y'[+] Apply a hosts file first'$N
					sleep 2
				fi
		    fi
		    sleep 0.1
		    echo -e $Y"$divider"$N
		# Blacklisting
		    echo -e $Y"$divider"$N
		    sleep 0.1
		    echo -e $Y'[+] BLACKLISTING'$N
		    sleep 0.1
		    echo -e $Y"$divider"$N
		    sleep 0.1
		  # Begins
		    if [ ! -f $BLACKLIST ]; then
				echo ""
				echo -e $R'[-] No Blacklist detected!'$N
				echo -e $W'[+] Copy your blacklist to'$N $Y'/sdcard/EnergizedProtection'$N
			else
				if [ -f "$HOST" ]; then
					if [ -s $BLACKLIST ]; then
						echo -e $G'[+] Blacklist Found!'$N
						echo -e $W'[+] Applying Blacklist...'$N
						sleep 0.1
						echo -e $W'[+] May take a while, depending on hosts size.'$N
						sleep 0.1
						echo -e $C'[+] Blacklist Log -'$N
						sleep 0.1
						sed 's/^ *//; s/ *$//; /^$/d; /^#/ d' $BLACKLIST > $LTEMP
						rm -f $TEMP $STEMP $PTEMP
						sed -n '1,79p' $HOST > $PTEMP
						sed -e '1,78d' < $HOST > $TEMP
						rm -f $HOST
						echo -e "\n# Applied on - $date" >> $TEMP
						NEWFILTERS="$(cat $LTEMP)"
						printf '%s\n' "$NEWFILTERS" | while IFS= read -r linenew
						do
						  if [ ! "$(grep -x "$curip$linenew" $TEMP)" ]; then
							echo -e "$curip$linenew" >> $TEMP
							echo -e $Y"$linenew "$N$W"- blacklisted."$N
						  else
							echo -e $R"$linenew "$N$W"- already blacklisted."$N
						  fi
						done
						awk '!a[$0]++' $TEMP > $STEMP
						cat $PTEMP $STEMP > $HOST
						rm -f $TEMP $STEMP $PTEMP
						echo -e $G'[+] Done'$N
						echo -e $W'[+] Returning...'$N
						sleep 1
					else
						echo -e $R'[-] Blacklist file is empty!'$N
						sleep 1
						echo -e $R'[-] NO NEW FILTER ADDED!'$N
						echo -e $W'[+] Returning...'$N
						sleep 2
					fi
				else
					echo ""
					echo -e $R'[-] No hosts file detected!'$N
					sleep 1
					echo -e $Y'[+] Apply a hosts file first'$N
					sleep 2
				fi
		    fi
		fi
		;;
		# Whitelist
		# ----------------------------------------
		w) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] WHITELISTING'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo ""
		# Begins
		if [ ! -f $WHITELIST ]; then
				echo ""
				echo -e $R'[-] No Whitelist Detected!'$N
				sleep 0.5
				echo -e $W'[+] Copy your whilelist to'$N $Y'$DIRECTORY'$N
				sleep 2
		    else
				if [ -f "$HOST" ]; then
					echo -e $G'[+] Whitelist Found!'$N
					echo -e $W'[+] Applying Whitelist'$N
					echo -e $W'[+] May take a while, depending on hosts size.'$N
					sleep 0.3
					grep -Fvxf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 0.5
					grep -Fvf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 0.5
					grep -vxf $WHITELIST $HOST > $TEMP
					rm -f $HOST
					mv $TEMP $HOST
					sleep 1
					echo -e $G'[+] Done'$N
					echo "[+] Returning..."
					sleep 1.5
				else
					echo ""
					echo -e $R'[-] No hosts file detected!'$N
					sleep 1
					echo -e $Y'[+] Apply a hosts file first'$N
					sleep 2
				fi
		    fi
		;;
		# Instant Whitelist
		# ----------------------------------------
		iw) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] INSTANT WHITELIST'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e "Instant whitelist will let you add a domain at a\ntime to add to your hosts as whitelisted.\nNote. To Whitelist more domains, use 'w' method."
		echo -e $Y"$divider"$N
		echo ""
		echo -n -e $W'[+] Enter Domain Name Only:'$N $iw
		read iw
		echo -e $W'[+] Your Domain'$N $Y"$iw"$N
		echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  echo "[+] Applying $iw as whitelist..."
		  grep -Fvx "$curip$iw" $HOST > $TEMP
		  rm -f $HOST
		  mv $TEMP $HOST
		  echo "$iw" >> $WHITELIST
		  echo -e $W'[+] Done'$N
		  echo -e $W'[+] Returning...'$N
		  sleep 1
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.3
		fi
		;;
		# Blacklist
		# ----------------------------------------
		b) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] BLACKLISTING'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo ""
		# Begins
		    if [ ! -f $BLACKLIST ]; then
				echo ""
				echo -e $R'[-] No Blacklist detected!'$N
				echo -e $W'[+] Copy your blacklist to'$N $Y'$DIRECTORY'$N
			else
				if [ -f "$HOST" ]; then
					if [ -s $BLACKLIST ]; then
						echo -e $G'[+] Blacklist Found!'$N
						echo -e $W'[+] Applying Blacklist...'$N
						sleep 0.1
						echo -e $W'[+] May take a while, depending on hosts size.'$N
						sleep 0.1
						echo -e $C'[+] Blacklist Log -'$N
						sleep 0.1
						sed 's/^ *//; s/ *$//; /^$/d; /^#/ d' $BLACKLIST > $LTEMP
						rm -f $TEMP $STEMP $PTEMP
						sed -n '1,79p' $HOST > $PTEMP
						sed -e '1,78d' < $HOST > $TEMP
						rm -f $HOST
						echo -e "\n# Applied on - $date" >> $TEMP
						NEWFILTERS="$(cat $LTEMP)"
						printf '%s\n' "$NEWFILTERS" | while IFS= read -r linenew
						do
						  if [ ! "$(grep -x "$curip$linenew" $TEMP)" ]; then
							echo -e "$curip$linenew" >> $TEMP
							echo -e $Y"$linenew "$N$W"- blacklisted."$N
						  else
							echo -e $R"$linenew "$N$W"- already blacklisted."$N
						  fi
						done
						awk '!a[$0]++' $TEMP > $STEMP
						cat $PTEMP $STEMP > $HOST
						rm -f $TEMP $STEMP $PTEMP
						echo -e $G'[+] Done'$N
						echo -e $W'[+] Returning...'$N
						sleep 1
					else
						echo -e $R'[-] Blacklist file is empty!'$N
						sleep 1
						echo -e $R'[-] NO NEW FILTER ADDED!'$N
						echo -e $W'[+] Returning...'$N
						sleep 2
					fi
				else
					echo ""
					echo -e $R'[-] No hosts file detected!'$N
					sleep 1
					echo -e $Y'[+] Apply a hosts file first'$N
					sleep 2
				fi
		    fi
		;;
		# ----------------------------------------
		# Instant Blacklist
		# ----------------------------------------
		ib) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] INSTANT BLACKLIST'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e "Instant Blacklist will let you add a domain at a\ntime to add to your hosts as blacklisted.\nNote. To Blacklist more domains, use 'b' method."
		echo -e $Y"$divider"$N
		echo ""
		echo -n -e $W'[+] Enter Domain Name Only:'$N $ib
		read ib
		if [ ! "$(grep -x "$curip$ib" $HOST)" ]; then
		  echo -e $W'[+] Your Domain(s)'$N $Y"$ib"$N
		  echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
		  read answer
		  if [ "$answer" == "Y" ]; then
		    echo "[+] Applying $ib as blacklist..."
		    echo -e "\n# Instant Blacklist Applied on - $date" >> $HOST
		    rm -f $TEMP $STEMP $PTEMP
		    sed -n '1,79p' $HOST > $PTEMP
		    sed -e '1,78d' < $HOST > $TEMP
		    rm -f $HOST
		    echo -e "\n# Applied on - $date" >> $TEMP
		    echo -e "$curip$ib" >> $TEMP
		    awk '!a[$0]++' $TEMP > $STEMP
		    cat $PTEMP $STEMP > $HOST
		    rm -f $TEMP $STEMP $PTEMP
		    echo -e "\n# Applied on - $date" >> $BLACKLIST
		    echo "$ib" >> $BLACKLIST
		    echo -e $W'[+] Done'$N
		    echo -e $W'[+] Returning...'$N
		    sleep 1
		    clear
		  else
		    clear
		    echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		    sleep 0.3
		  fi
		else
		  echo -e $G'[+] Domain was already being added to the hosts!'$N
		  sleep 2
		  fi
		;;
		# Redirect
		# ----------------------------------------
		re) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] REDIRECTS'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo ""
		sleep 0.1
		echo "Redirects the domains in the list to an IP."
		# Begins
		    if [ ! -f $REDIRECTLIST ]; then
				echo ""
				echo -e $R'[-] No Redirectlist detected!'$N
				echo -e $W'[+] Copy your redirect list to'$N $Y'$DIRECTORY'$N
			else
				if [ -f "$HOST" ]; then
					if [ -s $REDIRECTLIST ]; then
					echo -e $G'[+] Redirectlist Found!'$N
					echo ''
					echo -n -e $W'[+] Enter IP (v4 or v6):'$N $ip
					read ip
					echo -e $W'[+] Your IP:'$N $Y"$ip"$N
					echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
					read answer
					if [ "$answer" == "Y" ]; then
						echo -e $W'[+] Redirecting...'$N
						sleep 0.1
						echo -e $W'[+] May take a while, depending on hosts size.'$N
						sleep 0.1
						echo -e $C"[+] Redirect Log -"$N
						rm -f $STEMP
						cp $REDIRECTLIST $STEMP
						echo -e "\n# Applied on - $date" >> $HOST
						sed 's/^ *//; s/ *$//; /^$/d; /^#/d' $STEMP > $TEMP
						rm -f $STEMP
						NEWFILTERS="$(cat $TEMP)"
						printf '%s\n' "$NEWFILTERS" | while IFS= read -r linenew
						do
						grep -Fvx "$curip$linenew" $HOST > $STEMP
						rm -f $HOST
						mv $STEMP $HOST
						  if [ ! "$(grep -Fx "$curip$linenew" $HOST)" ]; then
							echo -e "$ip $linenew" >> $HOST
							echo -e $Y"$linenew "$N$W"- redirected to "$N$G"$ip"$N
						  fi
						done
						echo -e $G'[+] Done'$N
						echo -e $W'[+] Returning...'$N
						sleep 1
						else
						echo -e $W'[+] Returning...'$N
						fi
					else
						echo -e $R'[-] Blacklist file is empty!'$N
						sleep 1
						echo -e $R'[-] NO NEW FILTER ADDED!'$N
						echo -e $W'[+] Returning...'$N
						sleep 2
					fi
				else
					echo ""
					echo -e $R'[-] No hosts file detected!'$N
					sleep 1
					echo -e $Y'[+] Apply a hosts file first'$N
					sleep 2
				fi
		    fi
		;;
		# Instant Redirect
		# ----------------------------------------
		ri) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] INSTANT REDIRECT'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e "Instant redirect helps to redirect any specific\n domain to any IP."
		echo -e $Y"$divider"$N
		echo ""
		echo -n -e $W'[+] Enter Domain Name Only:'$N $iw
		read iw
		echo -e $W'[+] Your Domain'$N $Y"$iw"$N
		echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  grep -Fvx "$curip$iw" $HOST > $TEMP
		  rm -f $HOST
		  mv $TEMP $HOST
		  echo -n -e $W'[+] Enter IP (v4 or v6):'$N $ip
		  read ip
		  echo -e $W'[+] Your IP'$N $Y"$ip"$N
		  echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
		  read answer
		  if [ "$answer" == "Y" ]; then
		    echo -e "\n$ip $iw" >> $HOST
		    echo -e "\n# Applied on - $date" >> $REDIRECTLIST
		    echo "$ip $iw" >> $REDIRECTLIST
		    else
		    echo -e "\n$curip $iw" >> $HOST
		  fi
		  echo -e $W'[+] Done'$N
		  echo -e $W'[+] Returning...'$N
		  sleep 1
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.3
		fi
		;;
		# Info
		# ----------------------------------------
		i) am start -a android.intent.action.VIEW -d "https://nayemador.com/energized"
		;;
		# Instructions
		# ----------------------------------------
		in) am start -a android.intent.action.VIEW -d "https://nayemador.com/energized/instructions"
		;;
		thanks|thx|thnx|thax|thank|thanku|thankyou) am start -a android.intent.action.VIEW -d "$saythanks"
		;;
		# Backup Hosts
		# ----------------------------------------
		bp) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] BACKUP'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Makes a backup of your current hosts."
		echo -e $Y"$divider"$N
		echo ""
		echo -e $G'[+] Backup In Process...'$N
		cp $HOST $DIRECTORY/hosts-backup
		sleep 0.5
		echo -e $W'[+] Done!'$N
		sleep 1.3
		;;
		# Restore Hosts
		# ----------------------------------------
		rs) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] RESTORE'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Restores the hosts backup."
		echo -e $Y"$divider"$N
		echo ""
		echo -e $G'[+] Restoring...'$N
		mv $DIRECTORY/hosts-backup $HOST
		cp $HOST $DIRECTORY/hosts-backup
		sleep 0.5
		echo -e $W'[+] Done!'$N
		sleep 1.3
		;;
		# Clear Hosts
		# ----------------------------------------
		c) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] CLEAN HOSTS'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Clean your current hosts to defualt."
		echo -e $Y"$divider"$N
		echo ""
		rm -rf $HOST
		rm -f $FILTER
		rm -f $DFILTER
		touch $FILTER
		touch $DFILTER
		echo "[+] Clearing Hosts File..."
		sleep 0.3
		echo -e "# Energized Protection - nayemador.com/energized\n# Let's make an annoyance free better open internet, altogether!\127.0.0.1 localhost" >> $HOST
        echo "[+] Done Clearing Hosts!"
        echo "[+] Returning..."
        sleep 2
        ;;
		# Delta Patch
		# ----------------------------------------
		dp)  clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] DELTA PATCHING'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo "Apply Delta Blacklist and Whitelist."
		echo -e $Y"$divider"$N
		echo ""
		wget --no-check-certificate -O $LTEMP https://raw.githubusercontent.com/AdroitAdorKhan/Energized/master/core/delta-patchset/blacklist
		grep "#" $LTEMP > $DFILTER
		sed -i '/^#/d' $LTEMP
			echo -e $W'[+] Applying Delta Blacklist to current hosts.'$N
			sleep 0.1
				echo -e $W'[+] It may take a while, depending on hosts size.'$N
				sleep 0.1
				echo -e $C'[+] Blacklist Log -'$N
				sleep 0.1
				rm -f $TEMP $STEMP $PTEMP
				sed -n '1,79p' $HOST > $PTEMP
				sed -e '1,78d' < $HOST > $TEMP
				rm -f $HOST
				echo -e "\n# Applied on - $date" >> $TEMP
				NEWFILTERS="$(cat $LTEMP)"
				printf '%s\n' "$NEWFILTERS" | while IFS= read -r linenew
				do
				  if [ ! "$(grep -x "$curip$linenew" $TEMP)" ]; then
				    echo -e "$curip$linenew" >> $TEMP
				    echo -e $Y"$linenew "$N$W"- blacklisted."$N
				  else
				    echo -e $R"$linenew "$N$W"- already blacklisted."$N
				  fi
				done
				awk '!a[$0]++' $TEMP > $STEMP
				cat $PTEMP $STEMP > $HOST
				rm -f $TEMP $STEMP $PTEMP $LTEMP
			wget --no-check-certificate -O $STEMP https://raw.githubusercontent.com/AdroitAdorKhan/Energized/master/core/delta-patchset/whitelist
			echo -e $W'[+] Applying Delta Whitelist to current hosts.'$N
			echo -e $W'[+] It may take a while, depending on hosts size.'$N
			grep -Fvf $STEMP $HOST > $TEMP
			rm -f $HOST
			mv $TEMP $HOST
			rm -f $TEMP $STEMP
			echo -e $G'[+] Done!'$N
			echo "[+] Returning..."
			sleep 2
		;;
		# Redirection IP
		# ----------------------------------------
		ip) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] CUSTOM REDIRECTION IP'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e "Add your custom Redirection IP. It must be an IP.\nUsing anything else than IP, may cause issue with\nyour hosts."
		echo -e $Y"$divider"$N
		echo ""
		echo -n -e $W'[+] Enter Redirection IP:'$N $ip
		read ip
		echo -e $W'[+] Your Redirection IP'$N $Y"$ip"$N
		echo -n -e $W'[+] Are you sure?'$N $Y'[Y/N]'$N: $G"$answer"$N
		read answer
		if [ "$answer" == "Y" ]; then
		  echo "[+] Adding $ip as redirection IP..."
		  rm -f $TEMP $STEMP $PTEMP
		  sed -n '1,79p' $HOST > $PTEMP
		  sed -e '1,78d' < $HOST > $TEMP
		  rm -f $HOST
		  sed -e 's/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/'"${ip}"'/g' $TEMP > $STEMP
		  awk '!a[$0]++' $STEMP > $TEMP
		  cat $PTEMP $TEMP > $HOST
		  rm -f $TEMP $STEMP $PTEMP $LTEMP
		  echo -e $W'[+] Done'$N
		  echo -e $W'[+] Returning...'$N
		  sleep 1
		else
		  clear
		  echo -n -e $W'[+] RETURNING '$N
		  echo -n -e $Y'•'$N; sleep 0.2;
		  echo -n -e $Y'•'$N; sleep 0.3;
		  echo -n -e $Y'•'$N; sleep 0.2;
		  sleep 0.1
		fi
		;;
		# Check Domain In Hosts
		# ----------------------------------------
		chk|check|Check|CHECK|ck) clear
		echo -e $Y"$divider"$N
		echo -e $Y'[+] CHECK DOMAIN AVAILABILITY IN HOSTS'$N
		sleep 0.1
		echo -e $Y"$divider"$N
		sleep 0.1
		echo -e "Check any specific domain availability in hosts."
		echo -e $Y"$divider"$N
		echo ""
		echo -n -e $W'[+] Enter Domain Name Only:'$N $domain
		read domain
		echo -e $W"[+] Your Domain"$N $Y"$domain"$N
		if [ ! "$(grep -x "$curip$domain" $HOST)" ]; then
		  echo -e $R"[×] $domain - "$N$W"is not in the list!"$N
		  sleep 2
		  echo -n -e $W'[+] Want to block the domain?'$N $Y'[Y/N]'$N: $G"$answer"$N
		  read answer
		  if [ "$answer" == "Y" ]; then
		    echo "[+] Applying $domain as blacklist..."
		    echo -e "\n# Instant Blacklist Applied on - $date" >> $HOST
		    rm -f $TEMP $STEMP $PTEMP
		    sed -n '1,79p' $HOST > $PTEMP
		    sed -e '1,78d' < $HOST > $TEMP
		    rm -f $HOST
		    echo -e "\n# Applied on - $date" >> $TEMP
		    echo -e "$curip$domain" >> $TEMP
		    awk '!a[$0]++' $TEMP > $STEMP
		    cat $PTEMP $STEMP > $HOST
		    rm -f $TEMP $STEMP $PTEMP
		    echo -e "\n# Applied on - $date" >> $BLACKLIST
		    echo "$domain" >> $BLACKLIST
		    echo -e $W'[+] Done'$N
		    echo -e $W'[+] Returning...'$N
		    sleep 1
		    clear
		  else
		    clear
		    echo -n -e $W'[+] RETURNING '$N
		  fi
		else
		  echo -e $G"[✓] $domain - "$N$W"is in the list!"$N
		  sleep 2
		fi
		;;
		# Quit
		# ----------------------------------------
		q) break
		clear
		reset
		;;
		*)  echo ""
			echo -e $R"Invalid input. Don't use any spaces between letters."$N 
			sleep 2
		;;
	esac
	if [ $DIR ]; then
		echo ""
		wget --no-check-certificate -O $HOST https://raw.githubusercontent.com/EnergizedProtection/block/$DIR
		echo "\n\033[32;5;7m[+] Done Applying!\033[0m"
		sleep 1
		echo -e $Y"$divider"$N
		grep "Version Code" $TREADME > $FILTER
		sleep 0.5
		rm -f $DFILTER
		touch $DFILTER
		echo -e $W'[+] Returning...'$N
		sleep 0.3
		clear
	fi
	DIR=""
	COUNT=$((COUNT+1))
	clear
	reset
done
rm -f $TREADME
echo "[+] Done!"
# Script Ends
# ----------------------------------------
clear 
sleep 0.3
echo -e $Y"$divider"$N
sleep 0.1
echo -n -e $Y'                   T'$N; sleep 0.1; 
echo -n -e $Y'H'$N; sleep 0.1;
echo -n -e $Y'A'$N; sleep 0.1; 
echo -n -e $Y'N'$N; sleep 0.1; 
echo -n -e $Y'K '$N; sleep 0.1; 
echo -n -e $Y'Y'$N; sleep 0.1; 
echo -n -e $Y'O'$N; sleep 0.1; 
echo -n -e $Y'U'$N; sleep 0.1; 
echo -n -e $Y'!'$N; sleep 0.5; 
echo -n -e $R'♡\n\n'$N
sleep 0.1
echo -e $Y'              STAY ENERGIZED BUDDY!'$N
sleep 0.1
echo -e $Y"$divider"$N
echo ""
sleep 3
